# This workflow runs tests, builds and tags images,
# and updates the Life.io release tracking board.

name: Life.io Node.js CI

on:
  pull_request:
    branches:
      # - [ $default-branch ]
      - 'upgrade'
  push:
    branches:
      - [ $default-branch ]
      - 'build-*'
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Load Private Key to SSH Agent
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - run: npm ci
      - run: npm run test
  
  build-and-push:
    needs: [test]
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Load Private Key to SSH Agent
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Set tag prefix for PR event
      if: github.event_name == 'pull_request'
      run: echo "TAG_PREFIX=dev" >> $GITHUB_ENV
    - name: Set tag prefix for merge event
      if: github.event_name == 'push'
      run: echo "TAG_PREFIX=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        REPO_NAME=$GITHUB_REPOSITORY docker_opts='--ssh default' make docker-build-push
        echo "::set-output name=image::${TAG_PREFIX}-$GITHUB_SHA"
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: lvhdev/devops-actions-release-tracking
        ref: v2
        token: ${{ secrets.ACCESS_TOKEN }}
        path: .github/actions/release-tracking
    - name: Update Release Tracking Project
      uses: ./.github/actions/release-tracking
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  tag-and-push:
    needs: [test]
    runs-on: ubuntu-20.04
    if: github.event_name == 'release'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Load Private Key to SSH Agent
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Retag Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        RELEASE_TARGET: ${{ github.event.release.target_commitish }}
      run: REPO_NAME=$GITHUB_REPOSITORY make docker-retag
    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: lvhdev/devops-actions-release-tracking
        ref: v2
        token: ${{ secrets.ACCESS_TOKEN }}
        path: .github/actions/release-tracking
    - name: Update Release Tracking Project
      uses: ./.github/actions/release-tracking
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
